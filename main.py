from log_queries import create_table_search_log_EF, get_popular_queries
from search_movies import search_movies
from prettytable import PrettyTable

if __name__ == "__main__":
   from database_utils import connect_db, SAKILA_DB_CONFIG
from search_movies import search_movies
from log_queries import create_table_search_log_EF, get_popular_queries

# üîπ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –≥–æ–¥–æ–≤
def get_year_range():
    """–ü–æ–ª—É—á–∞–µ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."""
    connection = connect_db(SAKILA_DB_CONFIG)
    if connection is None:
        return 1990, 2024  

    cursor = connection.cursor()
    query = "SELECT MIN(release_year), MAX(release_year) FROM film;"
    
    try:
        cursor.execute(query)
        min_year, max_year = cursor.fetchone()
        return min_year, max_year
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –≥–æ–¥–æ–≤: {e}")
        return 1990, 2024
    finally:
        cursor.close()
        connection.close()

# üìå –°–ø–∏—Å–æ–∫ –∂–∞–Ω—Ä–æ–≤ —Å –Ω–æ–º–µ—Ä–∞–º–∏
GENRES = {
    1: "Action", 2: "Animation", 3: "Children", 4: "Classics",
    5: "Comedy", 6: "Documentary", 7: "Drama", 8: "Family",
    9: "Foreign", 10: "Games", 11: "Horror", 12: "Music",
    13: "New", 14: "Sci-Fi", 15: "Sports", 16: "Travel"
}

# üîπ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if __name__ == "__main__":
    create_table_search_log_EF()
    min_year, max_year = get_year_range()

    while True:
        print("\nüìå –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
        print("1. üîé –ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤")
        print("2. üìä –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã")
        print("3. ‚ùå –í—ã—Ö–æ–¥")

        choice = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä: ").strip()

        if choice == '1':
            print("\nüìå –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ (–Ω–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å):")

            # üìå –í—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ –∂–∞–Ω—Ä–æ–≤ –ø–µ—Ä–µ–¥ –≤–≤–æ–¥–æ–º
            print("\nüé≠ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∂–∞–Ω—Ä—ã:")
            for num, name in GENRES.items():
                print(f"{num}. {name}")

            # üìå –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–≤–æ–¥–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            genres_input = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä–∞ –∂–∞–Ω—Ä–æ–≤ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é) –∏–ª–∏ –∏—Ö –Ω–∞–∑–≤–∞–Ω–∏—è: ").strip()

            # üìå –û–±—Ä–∞–±–æ—Ç–∫–∞ –∂–∞–Ω—Ä–æ–≤
            genres = []
            if genres_input:
                genres_list = [g.strip() for g in genres_input.split(",")]

                for g in genres_list:
                    if g.isdigit():
                        genre_number = int(g)
                        genre_name = GENRES.get(genre_number)
                        if genre_name:
                            genres.append(genre_name)
                        else:
                            print(f"‚ö†Ô∏è –ñ–∞–Ω—Ä–∞ —Å –Ω–æ–º–µ—Ä–æ–º {genre_number} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
                    elif g in GENRES.values():
                        genres.append(g)
                    else:
                        print(f"‚ö†Ô∏è –ñ–∞–Ω—Ä '{g}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")

                if not genres:
                    print("‚ö†Ô∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∂–∞–Ω—Ä—ã. –ü–æ–∏—Å–∫ –±—É–¥–µ—Ç –±–µ–∑ —É—á—ë—Ç–∞ –∂–∞–Ω—Ä–∞.")
                    genres = None
            else:
                genres = None

            # üìå –í–≤–æ–¥ –≥–æ–¥–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π
            year = None
            while True:
                print(f"üìÖ –ì–æ–¥ –≤—ã–ø—É—Å–∫–∞ (–æ—Ç 1990 –¥–æ 2024):")
                year_input = input("–í–≤–µ–¥–∏—Ç–µ –≥–æ–¥ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å: ").strip()

                if not year_input:
                    break

                if year_input.isdigit():
                    year = int(year_input)
                    if 1990 <= year <= 2024:
                        break
                    else:
                        print(f"‚ö†Ô∏è –ì–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 1990-2024. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
                else:
                    print("‚ö†Ô∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –ø–æ–ª–µ –ø—É—Å—Ç—ã–º.")

            # üìå –í–≤–æ–¥ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞
            keyword = input("üîé –ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏: ").strip() or None

            # üìå –ó–∞–ø—É—Å–∫ –ø–æ–∏—Å–∫–∞
            selected_genre = genres[0] if genres else None
            print(f"üîç –ü–æ–∏—Å–∫ –ø–æ –∂–∞–Ω—Ä—É: {selected_genre}")  

            search_movies(genre=selected_genre, year=year, keyword=keyword)

        elif choice == '2':
            get_popular_queries()

        elif choice == '3':
            print("üëã –í—ã—Ö–æ–¥")
            break

        else:
            print("‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

